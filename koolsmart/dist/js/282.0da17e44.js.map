{"version":3,"file":"js/282.0da17e44.js","mappings":"0JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,SAAS,CAACE,YAAY,SAAS,CAACF,EAAG,SAAS,CAACE,YAAY,YAAYC,MAAM,CAAC,KAAO,IAAI,CAACH,EAAG,MAAM,CAACE,YAAY,SAAS,CAACF,EAAG,MAAM,CAACF,EAAIM,GAAG,cAAcJ,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,YAAY,CAACE,YAAY,YAAYC,MAAM,CAAC,KAAO,gBAAgBE,GAAG,CAAC,MAAQP,EAAIQ,6BAA6B,CAACR,EAAIM,GAAG,aAAa,GAAGJ,EAAG,MAAM,CAACE,YAAY,cAAcJ,EAAIS,GAAIT,EAAIU,eAAe,SAASC,EAAKC,GAAO,OAAOV,EAAG,aAAa,CAACW,IAAID,EAAMR,YAAY,aAAaC,MAAM,CAAC,SAAWM,GAAMJ,GAAG,CAAC,YAAcP,EAAIc,mBAAmBC,SAAS,CAAC,MAAQ,SAASC,GAAQ,OAAOhB,EAAIiB,iBAAiBN,EAAK,IAAI,IAAG,KAAKT,EAAG,SAAS,CAACgB,YAAY,CAAC,QAAU,OAAO,iBAAiB,SAAS,cAAc,SAAS,kBAAkB,UAAUb,MAAM,CAAC,KAAO,KAAK,CAACH,EAAG,WAAW,CAACG,MAAM,CAAC,YAAc,mBAAmBH,EAAG,YAAY,CAACE,YAAY,YAAYG,GAAG,CAAC,MAAQP,EAAImB,yBAAyB,CAACnB,EAAIM,GAAG,YAAY,IAAI,IAAI,EACr/B,EACIc,EAAkB,GCFlBrB,G,OAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACE,YAAY,aAAaC,MAAM,CAAC,OAAS,UAAU,CAACH,EAAG,SAAS,CAACA,EAAG,SAAS,CAACG,MAAM,CAAC,KAAO,KAAK,CAACH,EAAG,SAAS,CAACA,EAAG,MAAM,CAACA,EAAG,IAAI,CAACmB,MAAO,OAAMrB,EAAIsB,SAASC,KAAKC,QAAQ,IAAK,SAASxB,EAAIM,GAAG,IAAIN,EAAIyB,GAAGzB,EAAIsB,SAASI,MAAM,SAASxB,EAAG,SAAS,CAACG,MAAM,CAAC,KAAO,SAASL,EAAIS,GAAIT,EAAIsB,SAASK,SAAS,SAASC,EAAMf,GAAK,OAAOX,EAAG,MAAM,CAACW,IAAIA,EAAIT,YAAY,eAAe,CAACF,EAAG,IAAI,CAACmB,MAAO,WAAUrB,EAAI6B,gBAAgBhB,MAAQA,KAAO,CAACb,EAAIM,GAAG,IAAIN,EAAIyB,GAAGG,OAAW,IAAG,IAAI,GAAG1B,EAAG,SAAS,CAACE,YAAY,WAAWC,MAAM,CAAC,KAAO,IAAI,CAACH,EAAG,IAAI,CAACE,YAAY,iBAAiBG,GAAG,CAAC,MAAQ,SAASS,GAAiC,OAAzBA,EAAOc,kBAAyB9B,EAAI+B,eAAeC,MAAM,KAAMC,UAAU,QAAQ,IAAI,EAClvB,GACIb,EAAkB,GC4BtB,GACAM,KAAA,YACAQ,MAAA,aACAC,IAAAA,GACA,OACAC,YAAA,4BACAP,gBAAA,CACAQ,OAAA,eACAC,MAAA,yBACAC,OAAA,cACAC,MAAA,SAGA,EACAC,SAAA,CAEAnB,QAAAA,GACA,IAAAoB,EAAA,GAWA,OAVA,KAAAC,SAAAC,WAAA,cAAAC,SAAAC,IACA,IAAAC,EAAAD,EAAAE,MAAA,QACA,KAAAZ,YAAAa,SAAAF,KACAA,EAAA,SAEAL,EAAAK,KACAL,EAAAK,GAAA,GAEAL,EAAAK,IAAA,IAEA,CACArB,KAAA,KAAAiB,SAAAC,WAAA,iBACArB,KAAA,KAAAoB,SAAAC,WAAA,gBACAM,UAAA,KAAAP,SAAAO,UACAvB,QAAAe,EAEA,GAEAS,QAAA,CACApB,cAAAA,GACA,KAAAqB,MAAA,mBAAAT,SACA,ICrE0Q,I,UCQtQU,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIF,EAAeA,EAAiB,Q,8BC+BhC,GACA3B,KAAA,YACA4B,WAAA,CACAC,UAAAA,GAEApB,IAAAA,GACA,OACAqB,qBAAA,EACAC,iBAAA,GAEA,EACAhB,SAAA,CAGA/B,aAAAA,GACA,IAAAgD,EAAA,GACA,MAAAC,EAAA,KAAAC,OAAAC,MAAAC,aAAAC,gBAAAC,GACAC,EACA,KAAAL,OAAAC,MAAAK,QAAAD,sBACA,QAAAE,KAAAF,EAEA,GACAA,EAAAE,GAAAvB,WAAA,OACA,UAAAuB,EAAAnB,MAAA,QACA,CAEA,IAAAoB,EAAAH,EAAAE,GAAAvB,WAAAoB,GAAAhB,MAAA,KACA,cAAAoB,EAAA,IAAAA,EAAA,KAAAT,GACAD,EAAAW,KAAAJ,EAAAE,GAEA,CAOA,OALA,KAAAP,OAAAU,OAAA,uBAAAZ,GACA,KAAAE,OAAAU,OACA,gCACAZ,EAAAa,KAAAC,GAAAA,EAAAtB,aAEAQ,CACA,GAEAe,OAAAA,GACAC,EAAAC,IAAA,KAAAf,OAAAC,MAAAC,aAAAC,gBACA,EACAZ,QAAA,CACAhC,sBAAAA,GACA,KAAAyD,QAAAP,KAAA,4BACA,EACA7D,0BAAAA,GACA,MAAAmD,EAAA,KAAAC,OAAAC,MAAAC,aAAAC,gBAAAC,GACAa,EAAA,aAAAlB,MAAAmB,EAAAA,EAAAA,OACAC,EAAA,CACAf,GAAAa,EACAnD,KAAA,SACAH,KAAA,WACAyD,SAAA,IAEA,KAAApB,OAAAU,OAAA,0BAAAS,GACA,KAAAH,QAAAP,KAAA,sBACA,EACAvD,iBAAAA,CAAA6B,GACA,KAAAsC,SAAA,0BACAC,kBAAA,KACAC,iBAAA,KACApC,KAAA,YACAqC,MACAC,KACAC,EAAAA,EAAAA,IAAA,CAAAT,IAAAlC,EAAAC,WAAA,QAAAwC,MAAAG,IACA,KAAAC,SAAAC,QACA,UAAA9C,EAAAC,WAAA,sBACA,GACA,IAEA8C,OAEA,EACAzE,gBAAAA,CAAA0B,IACAgD,EAAAA,EAAAA,IAAA,CAAAd,IAAAlC,EAAAC,WAAA,QAAAwC,MACAQ,IACA,KAAAhC,OAAAU,OAAA,0BAAAsB,GACA,KAAAhB,QAAAP,KAAA,0BAEAqB,IACAhB,EAAAC,IAAAe,EAAA,GAGA,ICvI6P,ICQzP,GAAY,OACd,EACA3F,EACAqB,GACA,EACA,KACA,WACA,MAIF,EAAe,EAAiB,O,uBCnBjB,SAAS0D,IACtB,IAAID,GAAM,IAAIgB,MAAOC,UAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,UACjD,OAAOpB,EAAIqB,UACb,C","sources":["webpack://xiaolou/./src/views/SceneView/index.vue","webpack://xiaolou/./src/views/SceneView/components/SceneCard.vue","webpack://xiaolou/src/views/SceneView/components/SceneCard.vue","webpack://xiaolou/./src/views/SceneView/components/SceneCard.vue?ae2a","webpack://xiaolou/./src/views/SceneView/components/SceneCard.vue?7972","webpack://xiaolou/src/views/SceneView/index.vue","webpack://xiaolou/./src/views/SceneView/index.vue?071e","webpack://xiaolou/./src/views/SceneView/index.vue?7d67","webpack://xiaolou/./src/utils/uid.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"main\"},[_c('el-row',{staticClass:\"panel\"},[_c('el-col',{staticClass:\"sub-panel\",attrs:{\"span\":7}},[_c('div',{staticClass:\"title\"},[_c('div',[_vm._v(\"情景模式管理\")])]),_c('div',{staticClass:\"btn\"},[_c('el-button',{staticClass:\"scene-btn\",attrs:{\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.handleNewSceneModeBtnClick}},[_vm._v(\"新建情景模式\")])],1),_c('div',{staticClass:\"scene-list\"},_vm._l((_vm.sceneModeList),function(item,index){return _c('scene-card',{key:index,staticClass:\"scene-item\",attrs:{\"sceneObj\":item},on:{\"deleteScene\":_vm.handleSceneDelete},nativeOn:{\"click\":function($event){return _vm.handleSceneClick(item)}}})}),1)]),_c('el-col',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"column\",\"align-items\":\"center\",\"justify-content\":\"center\"},attrs:{\"span\":17}},[_c('el-empty',{attrs:{\"description\":\"请在左边编辑/新建情景模式\"}}),_c('el-button',{staticClass:\"scene-btn\",on:{\"click\":_vm.handleNextStepBtnClick}},[_vm._v(\" 下一步 \")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-card',{staticClass:\"scene-card\",attrs:{\"shadow\":\"hover\"}},[_c('el-row',[_c('el-col',{attrs:{\"span\":20}},[_c('el-row',[_c('div',[_c('i',{class:`mdi ${_vm.sceneMap.icon.replace(':', '-')}`}),_vm._v(\" \"+_vm._s(_vm.sceneMap.name)+\" \")])]),_c('el-row',{attrs:{\"type\":\"flex\"}},_vm._l((_vm.sceneMap.devices),function(value,key){return _c('div',{key:key,staticClass:\"device-item\"},[_c('i',{class:`mdi mdi-${_vm.deviceTypesIcon[key]} ${key}`},[_vm._v(\" \"+_vm._s(value))])])}),0)],1),_c('el-col',{staticClass:\"edit-col\",attrs:{\"span\":4}},[_c('i',{staticClass:\"el-icon-delete\",on:{\"click\":function($event){$event.stopPropagation();return _vm.deleteBtnClick.apply(null, arguments)}}})])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <el-card class=\"scene-card\" shadow=\"hover\">\n    <el-row>\n      <el-col :span=\"20\">\n        <el-row>\n          <div>\n            <i :class=\"`mdi ${sceneMap.icon.replace(':', '-')}`\"></i>\n            {{ sceneMap.name }}\n          </div>\n        </el-row>\n        <el-row type=\"flex\">\n          <div\n            class=\"device-item\"\n            v-for=\"(value, key) in sceneMap.devices\"\n            :key=\"key\"\n          >\n            <i :class=\"`mdi mdi-${deviceTypesIcon[key]} ${key}`\">\n              {{ value }}</i\n            >\n          </div>\n        </el-row>\n      </el-col>\n      <el-col :span=\"4\" class=\"edit-col\">\n        <i class=\"el-icon-delete\" @click.stop=\"deleteBtnClick\"></i>\n      </el-col>\n    </el-row>\n  </el-card>\n</template>\n\n<script>\nexport default {\n  name: \"SceneCard\",\n  props: [\"sceneObj\"],\n  data() {\n    return {\n      deviceTypes: [\"switch\", \"light\", \"sensor\"],\n      deviceTypesIcon: {\n        switch: \"light-switch\",\n        light: \"ceiling-light-multiple\",\n        sensor: \"thermometer\",\n        other: \"robot\",\n      },\n    };\n  },\n  computed: {\n    // 用于页面展示的映射数据\n    sceneMap() {\n      let deviceCount = {};\n      this.sceneObj.attributes[\"entity_id\"]?.forEach((device) => {\n        let type = device.split(\".\")[0];\n        if (!this.deviceTypes.includes(type)) {\n          type = \"other\";\n        }\n        if (!deviceCount[type]) {\n          deviceCount[type] = 0;\n        }\n        deviceCount[type]++;\n      });\n      return {\n        name: this.sceneObj.attributes[\"friendly_name\"],\n        icon: this.sceneObj.attributes[\"icon\"] ?? \"home\",\n        entity_id: this.sceneObj.entity_id,\n        devices: deviceCount,\n      };\n    },\n  },\n  methods: {\n    deleteBtnClick() {\n      this.$emit(\"deleteScene\", this.sceneObj);\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.scene-card::v-deep {\n  display: flex;\n  width: 100%;\n  border-radius: 8px;\n  font-size: 16px;\n  .el-card__body {\n    width: 100%;\n  }\n  .el-row {\n    height: 100%;\n  }\n\n  .edit-col {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    i {\n      margin-right: 10px;\n      font-size: 18px;\n    }\n    .el-icon-delete {\n      &:hover {\n        color: red;\n      }\n    }\n  }\n}\n.device-item {\n  margin-right: 8px;\n}\n.switch {\n  color: #627cf4;\n}\n.light {\n  color: #f4bc62;\n}\n.sensor {\n  color: #9562f4;\n}\n</style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SceneCard.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SceneCard.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SceneCard.vue?vue&type=template&id=640460d6&scoped=true\"\nimport script from \"./SceneCard.vue?vue&type=script&lang=js\"\nexport * from \"./SceneCard.vue?vue&type=script&lang=js\"\nimport style0 from \"./SceneCard.vue?vue&type=style&index=0&id=640460d6&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"640460d6\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"main\">\n    <el-row class=\"panel\">\n      <el-col :span=\"7\" class=\"sub-panel\">\n        <div class=\"title\">\n          <div>情景模式管理</div>\n        </div>\n        <div class=\"btn\">\n          <el-button\n            class=\"scene-btn\"\n            icon=\"el-icon-plus\"\n            @click=\"handleNewSceneModeBtnClick\"\n            >新建情景模式</el-button\n          >\n        </div>\n        <div class=\"scene-list\">\n          <scene-card\n            v-for=\"(item, index) in sceneModeList\"\n            :key=\"index\"\n            class=\"scene-item\"\n            :sceneObj=\"item\"\n            @click.native=\"handleSceneClick(item)\"\n            @deleteScene=\"handleSceneDelete\"\n          ></scene-card>\n        </div>\n      </el-col>\n\n      <el-col\n        :span=\"17\"\n        style=\"\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n        \"\n      >\n        <el-empty description=\"请在左边编辑/新建情景模式\"></el-empty>\n        <el-button class=\"scene-btn\" @click=\"handleNextStepBtnClick\">\n          下一步\n        </el-button>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport SceneCard from \"./components/SceneCard.vue\";\nimport { getSceneMode, deleteSceneMode } from \"@/services\";\nimport generateUniqueId from \"@/utils/uid\";\n\nexport default {\n  name: \"SceneView\",\n  components: {\n    SceneCard,\n  },\n  data() {\n    return {\n      createSceneModeFlag: false,\n      newSceneModeName: \"\",\n    };\n  },\n  computed: {\n    // 从entitiesFromSubscribe订阅中拿scene数据，可以持续获取最新状态\n    // 后续查看scene详情时再用http请求去查询\n    sceneModeList() {\n      let scenes = [];\n      const projectId = this.$store.state.projectStore.selectedProject.id;\n      const entitiesFromSubscribe =\n        this.$store.state.haStore.entitiesFromSubscribe;\n      for (let entity in entitiesFromSubscribe) {\n        // 一次筛选出scene\n        if (\n          entitiesFromSubscribe[entity].attributes[\"id\"] &&\n          entity.split(\".\")[0] === \"scene\"\n        ) {\n          // 二次删选出koolsmart的scene且与当前project吻合\n          let keyArr = entitiesFromSubscribe[entity].attributes.id.split(\"_\");\n          if (keyArr[0] === \"koolsmart\" && keyArr[1] === projectId) {\n            scenes.push(entitiesFromSubscribe[entity]);\n          }\n        }\n      }\n      this.$store.commit(\"sceneStore/setScenes\", scenes);\n      this.$store.commit(\n        \"projectStore/setProjectScenes\",\n        scenes.map((scene) => scene.entity_id)\n      );\n      return scenes;\n    },\n  },\n  created() {\n    console.log(this.$store.state.projectStore.selectedProject);\n  },\n  methods: {\n    handleNextStepBtnClick() {\n      this.$router.push(\"/project/viewpoint-design\");\n    },\n    handleNewSceneModeBtnClick() {\n      const projectId = this.$store.state.projectStore.selectedProject.id;\n      const uid = `koolsmart_${projectId}_${generateUniqueId()}`;\n      const newScene = {\n        id: uid,\n        name: \"新建情景模式\",\n        icon: \"mdi:home\",\n        entities: {},\n      };\n      this.$store.commit(\"sceneStore/setEditScene\", newScene);\n      this.$router.push(\"/project/scene/edit\");\n    },\n    handleSceneDelete(sceneObj) {\n      this.$confirm(\"你想要删除这个情景模式吗?\", \"Prompt\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      }).then(\n        (res1) => {\n          deleteSceneMode({ uid: sceneObj.attributes[\"id\"] }).then((res2) => {\n            this.$message.warning(\n              `删除情景模式 ${sceneObj.attributes[\"friendly_name\"]} 成功`\n            );\n          });\n        },\n        (err) => {}\n      );\n    },\n    handleSceneClick(sceneObj) {\n      getSceneMode({ uid: sceneObj.attributes[\"id\"] }).then(\n        (res) => {\n          this.$store.commit(\"sceneStore/setEditScene\", res);\n          this.$router.push(\"/project/scene/edit\");\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n@import \"./index.less\";\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=5461bac0&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=5461bac0&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5461bac0\",\n  null\n  \n)\n\nexport default component.exports","export default function generateUniqueId() {\n  let uid = new Date().getTime() + Math.floor(Math.random() * 10000000);\n  return uid.toString();\n}\n"],"names":["render","_vm","this","_c","_self","staticClass","attrs","_v","on","handleNewSceneModeBtnClick","_l","sceneModeList","item","index","key","handleSceneDelete","nativeOn","$event","handleSceneClick","staticStyle","handleNextStepBtnClick","staticRenderFns","class","sceneMap","icon","replace","_s","name","devices","value","deviceTypesIcon","stopPropagation","deleteBtnClick","apply","arguments","props","data","deviceTypes","switch","light","sensor","other","computed","deviceCount","sceneObj","attributes","forEach","device","type","split","includes","entity_id","methods","$emit","component","components","SceneCard","createSceneModeFlag","newSceneModeName","scenes","projectId","$store","state","projectStore","selectedProject","id","entitiesFromSubscribe","haStore","entity","keyArr","push","commit","map","scene","created","console","log","$router","uid","generateUniqueId","newScene","entities","$confirm","confirmButtonText","cancelButtonText","then","res1","deleteSceneMode","res2","$message","warning","err","getSceneMode","res","Date","getTime","Math","floor","random","toString"],"sourceRoot":""}